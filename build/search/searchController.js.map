{"version":3,"sources":["search/searchController.js"],"names":[],"mappings":";;;;;;AAAA;;;;AAEA;;;;AAEA;;;;;;AAEA,IAAI,MAAM;;;AAGR,oBAAkB,0BAAS,GAAT,EAAc,GAAd,EAAmB;AACnC,QAAI,YAAY,cAAI,KAAJ,CAAU,IAAI,GAAd,EAAmB,IAAnB,CAAhB;AACA,QAAI,QAAQ,UAAU,KAAtB;;AAEA,YAAQ,GAAR,CAAY,yBAAZ,EAAuC,KAAvC;;AAEA,yBAAM,IAAN,GACC,IADD,CACM,UAAS,GAAT,EAAc,OAAd,EAAuB;AACzB,UAAI,GAAJ,EAAS,IAAI,IAAJ,CAAS,8BAAT,EAAT,KACK;AAAA,YA2CM,CA3CN;;AAAA;AACH,cAAI,iBAAgB,EAApB;AACA,kBAAQ,OAAR,CAAgB,UAAS,GAAT,EAAc,CAAd,EAAiB;AAC/B,gBAAI,SAAS,CAAb;;AAEA,gBAAI,IAAI,cAAJ,CAAmB,QAAnB,KAAgC,MAAM,QAA1C,EAAoD;AAClD,wBAAU,EAAV;AACD;AACD,gBAAI,IAAI,YAAJ,CAAiB,MAAjB,KAA4B,MAAM,MAAtC,EAA8C;AAC5C,wBAAU,EAAV;AACD;AACD,gBAAI,IAAI,YAAJ,CAAiB,MAAjB,KAA4B,MAAM,MAAtC,EAA8C;AAC5C,wBAAU,EAAV;AACD;AACD,gBAAI,IAAI,YAAJ,CAAiB,MAAjB,KAA4B,MAAM,MAAtC,EAA8C;AAC5C,wBAAU,EAAV;AACD;AACD,gBAAI,MAAM,QAAN,KAAmB,SAAnB,IAAgC,IAAI,eAAJ,CAAoB,QAApB,KAAiC,MAAM,QAA3E,EAAqF;AACnF,wBAAU,EAAV;AACD;AACD,gBAAI,IAAI,aAAJ,CAAkB,MAAlB,KAA6B,MAAM,MAAvC,EAA+C;AAC7C,wBAAU,EAAV;AACD;;;AAGD,gBAAG,CAAC,MAAM,WAAP,GAAqB,IAAI,WAAJ,CAAgB,IAAxC,EAA8C;AAC5C,wBAAU,EAAV;AACD;AACD,gBAAI,CAAC,MAAM,WAAP,GAAqB,IAAI,WAAJ,CAAgB,IAAzC,EAA+C;AAC7C,wBAAU,EAAV;AACD;;AAED,2BAAe,IAAf,CAAoB,CAAC,CAAD,EAAI,MAAJ,CAApB;AACD,WA/BD;;AAiCA,2BAAiB,eAAe,IAAf,CAAoB,UAAS,CAAT,EAAY,CAAZ,EAAe;AAClD,mBAAO,EAAE,CAAF,IAAK,EAAE,CAAF,CAAZ;AACD,WAFgB,CAAjB;;AAIA,cAAI,UAAU,eAAe,KAAf,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,GAA3B,CAA+B,UAAS,GAAT,EAAc;AACzD,mBAAO,QAAQ,IAAI,CAAJ,CAAR,CAAP;AACD,WAFa,CAAd;;AAIA,eAAS,IAAE,CAAX,EAAc,IAAE,QAAQ,MAAxB,EAAgC,GAAhC,EAAqC;AACnC,gBAAI,MAAM,QAAQ,CAAR,CAAV;AACA,oBAAQ,GAAR,CAAY,IAAI,YAAhB,EAA8B,IAAI,YAAlC,EAAgD,IAAI,cAApD,EAAoE,IAAI,eAAxE,EAAyF,IAAI,WAAJ,CAAgB,IAAzG,EAA+G,IAAI,aAAnH,EAAkI,IAAI,WAAJ,CAAgB,IAAlJ,EAAwJ,IAAI,YAA5J;AACD;;AAED,+BAAW,IAAX,CAAgB,OAAhB;;AAEA,cAAI,IAAJ,CAAS,OAAT;AAlDG;AAmDJ;AACJ,KAvDD;AAwDD;AAjEO,CAAV;;kBAoEe,G","file":"search/searchController.js","sourcesContent":["import url from 'url';\n\nimport Puppy from '../puppy/puppyModel';\n\nimport statHelper from '../stat/statHelper';\n\nvar api = {\n  // TODO query를 req.body로 보내기\n  /* SEARCH and RETURN three matching puppies */\n  getResultPuppies: function(req, res) {\n    var url_parts = url.parse(req.url, true);\n    var query = url_parts.query;\n\n    console.log(\"/search Receieved req: \", query);\n\n    Puppy.find()\n    .exec(function(err, puppies) {\n        if (err) res.send('cannot retrieve data from DB');\n        else {\n          let resultWeighted= [];\n          puppies.forEach(function(val, i) {\n            let weight = 0;\n\n            if (val.isUserAllergic.allergic === query.allergic) {\n              weight += 10;\n            }\n            if (val.isUserAbsent.absent === query.absent) {\n              weight += 10;\n            }\n            if (val.isUserActive.active === query.active) {\n              weight += 10;\n            }\n            if (val.isUserSingle.single === query.single) {\n              weight += 10;\n            }\n            if (query.friendly === 'default' || val.isPuppyFriendly.friendly === query.friendly) {\n              weight += 10;\n            }\n            if (val.isPuppyInside.inside === query.inside) {\n              weight += 10;\n            }\n\n            // 앞: 유저가 설문한 값, 뒤: 강아지 실제 비용\n            if(+query.initialCost - val.initialCost.cost) {\n              weight += 10;\n            }\n            if (+query.maintenance - val.maintenance.cost) {\n              weight += 10;\n            }\n\n            resultWeighted.push([i, weight]);\n          });\n\n          resultWeighted = resultWeighted.sort(function(a, b) {\n            return b[1]-a[1];\n          });\n\n          let matched = resultWeighted.slice(0, 3).map(function(val) {\n            return puppies[val[0]];\n          });\n\n          for (var i=0; i<matched.length; i++) {\n            let val = matched[i];\n            console.log(val.isUserAbsent, val.isUserActive, val.isUserAllergic, val.isPuppyFriendly, val.initialCost.cost, val.isPuppyInside, val.maintenance.cost, val.isUserSingle);\n          }\n\n          statHelper.save(matched);\n\n          res.send(matched);\n        }\n    });\n  }\n};\n\nexport default api;\n"],"sourceRoot":"/source/"}