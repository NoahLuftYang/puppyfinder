{"version":3,"sources":["puppy/puppyController.js"],"names":[],"mappings":"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","file":"puppy/puppyController.js","sourcesContent":["import Puppy from '../puppy/puppyModel';\n\nvar api = {\n  /* GET all puppies in DB */\n  getPuppies: function(req, res) {\n    Puppy.find().sort({ total_weight: -1 })\n    .exec(function(err, puppy) {\n      if (err) {\n        res.send('cannot retrieve data from DB');\n      } else {\n        res.send(puppy);\n      }\n    });\n  },\n\n  /* GET specific puppy in DB, where breed is breed */\n  getPuppiesByBreed: function(req, res) {\n    var breed = req.params.breed;\n\n    Puppy.findOne({breed: breed})\n    .exec(function(err, puppy) {\n      if (err) {\n        res.send(\"cannot retreive \" + breed);\n      } else {\n        res.send(puppy);\n      }\n    });\n  },\n\n  /* DELETE a puppy whose breed is breed */\n  deletePuppiesByBreed: function(req, res) {\n    var breed = req.params.breed;\n\n    console.log('To be deleted: ', breed);\n\n    Puppy.remove({breed: breed}, function(err) {\n      if (err) {\n        console.log('fail to delete' + breed);\n      } else {\n        Puppy.find().sort({ total_weight: -1 })\n        .exec(function(err, puppy) {\n          if (err) {\n            res.send(\"cannot retrieve data from DB\");\n          } else {\n            res.send(puppy);\n          }\n        });\n      }\n    });\n  },\n\n\n  /* UPDATE a new puppy into puppy DB */\n  updatePuppy: function(req, res) {\n    Puppy.findById(req.params.id, function(err, puppy) {\n      if (err) {\n        console.error(\"Cannot update \", req.params.id);\n        return null;\n      }\n\n      // TODO body에 object 변수로 보내고 받기\n      var breedOrigin = puppy.breed;\n      puppy.breed = req.body.breed;\n      puppy.description = req.body.description;\n      puppy.image = req.body.image;\n      puppy.isUserAllergic.allergic = req.body.isUserAllergic.allergic;\n      puppy.isUserAbsent.absent = req.body.isUserAbsent.absent;\n      puppy.isUserActive.active = req.body.isUserActive.active;\n      puppy.isUserSingle.single = req.body.isUserSingle.single;\n      puppy.isPuppyFriendly.friendly = req.body.isPuppyFriendly.friendly;\n      puppy.isPuppyInside.inside = req.body.isPuppyInside.inside;\n      puppy.initialCost.cost = req.body.initialCost.cost;\n      puppy.maintenance.cost = req.body.maintenance.cost;\n      Puppy.findOne({$and: [{breed: puppy.breed}, {_id: {$ne: puppy._id}}]}, function(err, pup) {\n        if (pup === null || pup === undefined) {\n          puppy.save(function(err, puppy) {\n            if (err) {\n              console.log(\"Cannot save\", puppy);\n            } else {\n              console.log('Updated puppy: ', puppy);\n              Puppy.find().sort({ total_weight: -1 })\n                .exec(function(err, ppy) {\n                  if (err) {\n                    res.send('Cannot retrieve data from DB');\n                  } else {\n                    res.send(ppy);\n                  }\n                });\n            }\n          });\n        } else {\n          console.log('error: db has already same dog : ', pup);\n          res.send(\"db has already the same breed\");\n        }\n      });\n\n    });\n  }\n};\n\nexport default api;\n"],"sourceRoot":"/source/"}